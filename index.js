const data = [
  {
    name: [
      `<ul>
          <li>Создан репозиторий goit-js-hw-07</li>
          <li>При сдаче домашней работы есть две ссылки: на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Домашняя работа содержит две ссылки на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Ссчитает и выведет в консоль количество категорий в ul#categories, то есть элементов li.item</li>
          <li>Для каждого элемента li.item в списке ul#categories найдет и выведет в консоль текст заголовка элемента (тега h2) и количество элементов в категории (всех li вложенных в него).</li\>
          <li><a href="./task-01.html">Перейти на страницу выполнения задания</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Создан репозиторий goit-js-hw-07</li>
          <li>При сдаче домашней работы есть две ссылки: на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Домашняя работа содержит две ссылки на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Напиши скрипт для создания галереи изображений по массиву данных. В HTML есть список ul.gallery class="gallery"></li>
          <li>Используй массив объектов images для создания элементов img вложенных в li. Для создания разметки используй шаблонные строки и метод insertAdjacentHTML().</li>
          <li>Все элементы галереи должны добавляться в DOM за одну операцию вставки.</li>
          <li>Добавь минимальное оформление галереи флексбоксами или гридами через CSS классы.</li>
          <li><a href="./task-02.html">Перейти на сторінку виконання завдання</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Создан репозиторий goit-js-hw-07</li>
          <li>При сдаче домашней работы есть две ссылки: на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Домашняя работа содержит две ссылки на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Напиши скрипт который, при наборе текста в инпуте input#name-input (событие input), подставляет его текущее значение в span#name-output.</li>
          <li>Если инпут пустой, в спане должна отображаться строка "Anonymous".</li>
          <li>Обязательно очищай значение в инпуте по краям от пробелов.</li>
          <li>Если инпут пуст или содержит только пробелы, вместо имени у спан должна подставляться строка "Anonymous".</li>
          <li><a href="./task-03.html">Перейти на сторінку виконання завдання</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Создан репозиторий goit-js-hw-07</li>
          <li>При сдаче домашней работы есть две ссылки: на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Домашняя работа содержит две ссылки на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Обработка отправки формы form.login-form должна быть по событию submit.</li>
          <li>При отправке формы страница не должна перезагружаться.</li>
          <li>Если в форме есть незаполненные поля, выводи alert с предупреждением о том, что все поля должны быть заполнены.</li>
          <li>Если пользователь заполнил все поля и отправил форму, собери значения полей в обьект, где имя поля будет именем свойства, а значение поля - значением свойства. Для доступа к элементам формы используй свойство elements.</li>
          <li>Выведи обьект с введенными данными в консоль и очисти значения полей формы методом reset.</li>
          <li><a href="./task-04.html">Перейти на сторінку виконання завдання</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Создан репозиторий goit-js-hw-07</li>
          <li>При сдаче домашней работы есть две ссылки: на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Домашняя работа содержит две ссылки на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Напиши скрипт, который изменяет цвета фона элемента через инлайн стиль при клике на button.change-color и выводит значение цвета в span.color.</li>
          <li>Для генерации случайного цвета используй функцию getRandomHexColor.</li>
          <li><a href="./task-05.html">Перейти на сторінку виконання завдання</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Создан репозиторий goit-js-hw-07</li>
          <li>При сдаче домашней работы есть две ссылки: на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Домашняя работа содержит две ссылки на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Напиши скрипт создания и очистки коллекции элементов</li>
          <li>Пользователь вводит количество элементов в input и нажимает кнопку Создать</li>
          <li>После чего рендерится коллекция.</li>
          <li>При нажатии на кнопку Очистить, коллекция элементов очищается.</li>
          <li>Создай функцию createBoxes(amount), которая принимает один параметр - число.</li>
          <li>После нажатия пользователем на кнопку Create нужно провалидировать значение input, оно должно быть в пределах от 1 до 100 включительно. Только если оно удовлетворяет условию, должны добавляться новые
элементы в DOM.</li>
          <li>Функция создает столько <div>, сколько указано в amount и добавляет их в div#boxes.</li>
          <li>Размеры самого первого - 30px на 30px.</li>
          <li>Каждый элемент после первого, должен быть шире и выше предыдущего на 10px</li>
          <li>Все элементы должены иметь случайный цвет фона в формате HEX. Используй готовую функцию getRandomHexColor для получения цвета.</li>
          <li>Создай функцию destroyBoxes(), которая очищает содержимое div#boxes, тем самым удаляя все созданные элементы</li>
          <li><a href="./task-06.html">Перейти на сторінку виконання завдання</a></li>
        </ul>`
    ],
  },
];
const buttons = document.querySelectorAll('.btn-resources');
const tabContent = document.querySelector('#tab-content');
buttons.forEach(el => el.addEventListener('click', handleClickTab));

function handleClickTab(e) {
  buttons.forEach((el, index) => {
        el.classList.remove('active');
      },
  );
  e.target.classList.add('active');
  tabContent.innerHTML = data[e.target.dataset.number].name
}
