const data = [
  {
    name: [
      `<ul>
          <li>Создан репозиторий goit-js-hw-06</li>
          <li>При сдаче домашней работы есть две ссылки: на исходные файлы и рабочую страницу на GitHub Pages.</li>
          <li>Задания выполнены строго по ТЗ (нельзя изменять исходный HTML задания)</li>
          <li>Имена переменных и функций понятные, описательные</li>
          <li>Код отформатирован Prettier</li>
          <li><a href="./task-01.html">Перейти на страницу выполнения задания</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Создаст отдельный элемент li Обзательно используй метод document.createElement().</li>
          <li>Добавит название ингредиента как его текстовое содержимое..</li>
          <li>Добавит элементу класс item.</li>
          <li>После чего вставит все li за одну операцию в список ul#ingredients.</li>
          <li>Код отформатирован Prettier</li>
          <li><a href="./task-02.html">Перейти на страницу выполнения задания</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
              <li>Напиши скрипт для создания галереи изображений по массиву данных. В HTML есть список ul.gallery.</li>
          <li>Используй массив объектов images для создания элементов img вложенных в li. </li>
          <li>Для создания разметки используй шаблонные строки и метод insertAdjacentHTML().</li>
                    <li><a href="./task-03.html">Перейти на страницу выполнения задания</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
     
           <li>Счетчик состоит из спана и кнопок, которые, при клике, должны увеличивать и уменьшать его значение на единицу.</li>
          <li>Создай переменную counterValue в которой будет храниться текущее значение счетчика и инициализируй её значением 0.</li>
          <li> Добавь слушатели кликов на кнопки, внутри которых увеличивай или уменьшай</li>
          <li>Код отформатирован Prettier</li>
          <li>Код отформатирован Prettier</li>
          <li><a href="./task-04.html">Перейти на страницу выполнения задания</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Напиши скрипт который, при наборе текста в инпуте input#name-input (событие input)</li>
          <li>Подставляет его текущее значение в span#name-output.</li>
          <li>Если инпут пустой, в спане должна отображаться строка "Anonymous".</li>
          <li>Код отформатирован Prettier</li>
          <li><a href="./task-05.html">Перейти на страницу выполнения задания</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Напиши скрипт, который при потере фокуса на инпуте (событие blur), </li>
          <li>Проверяет его содержимое на правильное количество введённых символов.</li>
          <li>Для добавления стилей, используй CSS-классы valid и invalid, которые мы уже добавили в исходные файлы задания.</li>
          <li>Код отформатирован Prettier</li>
          <li><a href="./task-06.html">Перейти на страницу выполнения задания</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Напиши скрипт, который реагирует на изменение значения input#font-size-control </li>
          <li>Событие input) и изменяет инлайн-стиль span#text</li>
          <li>Обновляя свойство font-size</li>
          <li>В результате при перетаскивании ползунка будет меняться размер текста.</li>
          <li>Код отформатирован Prettier</li>
          <li><a href="./task-07.html">Перейти на страницу выполнения задания</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Напиши скрипт управления формой логина.</li>
          <li>Обработка отправки формы form.login-form должна быть по событию submit</li>
          <li>При отправке формы страница не должна перезагружаться.</li>
          <li>Если в форме есть незаполненные поля, выводи alert с предупреждением о том, что все поля должны быть заполнены.</li>
          <li>Если пользователь заполнил все поля и отправил форму, собери значения полей в обьект, где имя поля будет именем свойства, а значение поля - значением свойства. Для доступа к элементам формы используй свойство elements.</li>
      <li>Выведи обьект с введенными данными в консоль и очисти значения полей формы методом reset.</li>
         <li>Код отформатирован Prettier</li>
          <li><a href="./task-08.html">Перейти на страницу выполнения задания</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Напиши скрипт, который изменяет цвета фона элемента body</li>
          <li>Через инлайн стиль при клике на button.change-color </li>
          <li>И выводит значение цвета в span.color.</li>
          <li>Код отформатирован Prettier</li>
          <li><a href="./task-09.html">Перейти на страницу выполнения задания</a></li>
        </ul>`
    ],
  },
  {
    name: [
      `<ul>
          <li>Напиши скрипт создания и очистки коллекции элементов.</li>
          <li>Пользователь вводит количество элементов в input</li>
          <li>И нажимает кнопку Создать, после чего рендерится коллекция.</li>
          <li>При нажатии на кнопку Очистить, коллекция элементов очищается.</li>
          <li>Код отформатирован Prettier</li>
          <li><a href="./task-10.html">Перейти на страницу выполнения задания</a></li>
        </ul>`
    ],
  },
];
const buttons = document.querySelectorAll('.btn-resources');
const tabContent = document.querySelector('#tab-content');
buttons.forEach(el => el.addEventListener('click', handleClickTab));

function handleClickTab(e) {
  buttons.forEach((el, index) => {
        el.classList.remove('active');
      },
  );
  e.target.classList.add('active');
  tabContent.innerHTML = data[e.target.dataset.number].name

}

function displayContent(items) {
  console.log(items);

  // let listContent = "";
  // for (const item of items) {
  //   listContent += `<li>${item}</li>`;
  // }
  // const list = document.createElement("ul");
  // tabContent.innerHTML = ""; // clear existing content
  // list.innerHTML = listContent; // insert new content
  // tabContent.append(list);
}